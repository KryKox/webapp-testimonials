// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // optional
  access_token      String? // optional
  expires_at        Int?    // optional
  token_type        String? // optional
  scope             String? // optional
  id_token          String? // optional
  session_state     String? // optional
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  discount    Float?
  mainImage   String
  subImages   String[]

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  type ProductType

  shoeDetails       ShoeDetails?       @relation(fields: [shoeDetailsId], references: [id], onDelete: Cascade)
  clothingDetails   ClothingDetails?   @relation(fields: [clothingDetailsId], references: [id], onDelete: Cascade)
  electronicDetails ElectronicDetails? @relation(fields: [electronicDetailsId], references: [id], onDelete: Cascade)

  shoeDetailsId       Int?
  clothingDetailsId   Int?
  electronicDetailsId Int?
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

enum ProductType {
  SHOE
  CLOTHING
  ELECTRONIC
}

model ShoeDetails {
  id      Int       @id @default(autoincrement())
  sizes   Float[]
  product Product[]
}

model ClothingDetails {
  id      Int       @id @default(autoincrement())
  sizes   String[]
  product Product[]
}

model ElectronicDetails {
  id      Int       @id @default(autoincrement())
  model   String
  product Product[]
}
